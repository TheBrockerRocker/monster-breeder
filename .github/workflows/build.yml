# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: build
on: [pull_request, push]
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v4
      - name: setup jdk
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'microsoft'
      - name: make gradle wrapper executable
        run: chmod +x ./gradlew
      - name: build
        run: ./gradlew build
      - name: Read Version Name
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: ./update/VERSION
      - name: Read Changelog
        id: changelog
        uses: juliangruber/read-file-action@v1
        with:
          path: ./update/CHANGELOG.md
      - name: Get Short Commit Hash
        id: sha
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Upload Mod Files to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/libs/*
          tag: ${{steps.version.outputs.content}}-build-${{steps.sha.outputs.sha_short}}
          release_name: Version ${{ steps.version.outputs.content}}
          overwrite: true
          file_glob: true
          body: |
            ${{ steps.changelog.outputs.content }}